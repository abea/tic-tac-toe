"use strict";function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function startGame(){spaces.forEach(function(a){a.removeAttribute("disabled")}),starter.setAttribute("disabled","true"),player1=new Player("one","x"),player2=new Player("two","o")}function gameOver(){message.textContent="Game Over",message.classList.remove("is-hidden")}function triggerWin(a){message.textContent="Player "+a.name+" wins!",message.classList.remove("is-hidden"),spaces.forEach(function(a){a.setAttribute("disabled","")})}function inDiagonalWin(a,b){var c=a.findIndex(function(a){return a.row===parseInt(b.row,10)}),d=a.findIndex(function(a){return a.col===parseInt(b.col,10)});return c>-1&&d===c}function winCheck(a,b){var c=[].concat(_toConsumableArray(b)),d={row1:0,row2:0,row3:0,col1:0,col2:0,col3:0},e=0,f=0;c.forEach(function(b){var c="row"+b.row,g="col"+b.col;d[c]+=1,d[g]+=1,3===d[c]||3===d[g]?triggerWin(a):(inDiagonalWin(diagWin1,b)||inDiagonalWin(diagWin2,b))&&(inDiagonalWin(diagWin1,b)&&(e+=1),inDiagonalWin(diagWin2,b)&&(f+=1))}),3!==e&&3!==f||triggerWin(a)}function makeMove(){var a=void 0,b={row:this.dataset.row,col:this.dataset.col};turn+=1,a=turn%2!=0?player1:player2,a.moves.push(b),this.dataset.played=a.symbol,this.textContent=a.symbol.toUpperCase(),this.setAttribute("disabled","true"),winCheck(a,a.moves),turn===spaces.length&&gameOver()}var turn=0,player1={},player2={},starter=document.getElementById("starter"),spaces=document.querySelectorAll(".board__space"),message=document.querySelector(".board__message"),Player=function a(b,c){_classCallCheck(this,a),this.name=b,this.symbol=c,this.moves=[]};starter.addEventListener("click",function(){startGame()});var diagWin1=[{row:1,col:1},{row:2,col:2},{row:3,col:3}],diagWin2=[{row:3,col:1},{row:2,col:2},{row:1,col:3}];spaces.forEach(function(a){a.addEventListener("click",makeMove)});